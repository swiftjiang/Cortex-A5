////////////////////////////////////////////////////////////////////////////////
// ReportQueue.h
////////////////////////////////////////////////////////////////////////////////

#ifndef REPORT_QUEUE_H
#define REPORT_QUEUE_H

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////

#include "Types.h"
#include <pthread.h>
#include <vector>

////////////////////////////////////////////////////////////////////////////////
// CReportQueue Class Definition
////////////////////////////////////////////////////////////////////////////////

class CReportQueue
{
    // Constructor/Destructor
public:
    CReportQueue();
    ~CReportQueue();

    // Public Methods
public:
    void Clear();
    void Reserve(DWORD count);
    void Enqueue(const BYTE* data, DWORD size);
    void Dequeue(BYTE* data, DWORD size, DWORD* bytesDequeued);
    DWORD Size();

    // Protected Members
protected:
    std::vector<BYTE> m_queue;
    pthread_mutex_t m_cs;
};

#endif // REPORT_QUEUE_H
